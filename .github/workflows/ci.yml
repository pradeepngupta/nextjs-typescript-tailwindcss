name: Build, Tests, and Deploy

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'release/**'
    paths:
      - '**.js'
      - '**.ts'
      - '**.jsx'
      - '**.tsx'
      - '**.json'
      - '**.yml'
      - 'public/**'
      - '__tests__/**'
      - '__e2e__/**'
  pull_request:
    branches:
      - main
      - develop
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: 'pages'
      cancel-in-progress: false

env:
  NODE_VERSION: 20.x

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Verify Build Output
        run: |
          pwd
          ls -la ./.next
          ls -la .next

      - name: Cache Build Output
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            node_modules
          key: build-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: './.next/**'

  jest-test:
    name: Run Jest Tests
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Run Jest Tests
        run: npm run test:cov

      - name: Upload Jest Coverage Report to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  playwright-test:
    name: Run Playwright Tests
    needs: jest-test
    runs-on: ubuntu-24.04
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install Playwright and Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests
        run: npx playwright test

      - name: Upload Playwright Test Results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    name: Deploy to GitHub Pages
    needs: playwright-test
    if: ${{ github.ref_name == 'main' && success() }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
          token: ${{ secrets.PAGES_TOKEN }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  summary:
    name: Set Step Summary
    needs: deploy
    if: ${{ success() }}
    runs-on: ubuntu-24.04
    steps:
      - name: Set step Summary
        run: |
          echo 'Deployment to Github Pages successful ðŸš€' >> $GITHUB_STEP_SUMMARY
